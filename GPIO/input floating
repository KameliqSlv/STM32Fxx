/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#define BASEADDR_RCC 					0x40023800U
#define RCC_AHB1RSTR_OFFSET 			0x30U											//RCC AHB1 peripheral clock register offset
#define RCC_AHB1RSTR					(BASEADDR_RCC + RCC_AHB1RSTR_OFFSET)

#define BASEADDR_GPIOA		 			0x40020000U

#define BASEADDR_GPIOA_PU_PD_OFFSET		0x0CU
#define BASEADDT_GPIOA_PU_PD			(BASEADDR_GPIOA + BASEADDR_GPIOA_PU_PD_OFFSET)
/*
 * 	Input floating
 * 	means: no pull-up or pull-down resistor, and is floating
 *
 */


int main(void)
{
	/*
	 *	1. 	 Enable clock for GPIOA peripheral using RCC_AHB1ENR
	 */
	uint32_t *pRCC_GPIOA = (uint32_t*) RCC_AHB1RSTR;
	*pRCC_GPIOA |= (1 << 0);							//bit 0: GPIOA enable


	/*
	 * 	2.	Set GPIO as input
	 */
	uint32_t *pGPIOA_IN = (uint32_t*) BASEADDR_GPIOA;
	*pGPIOA_IN &= ~(0x3 << 0);							// clear bits

	/*
	 * 	3.	NO pull-up and pull-down
	 */
	uint32_t *pPuPd = (uint32_t*) BASEADDT_GPIOA_PU_PD;
	*pPuPd &= ~(0x3 << 0);								// clear bits



    /* Loop forever */
	for(;;);
}
